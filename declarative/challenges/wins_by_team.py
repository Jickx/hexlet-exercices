# Предположим, что нам нужно анализировать результаты матчей "команда против
# команды" по некоторому виду спорта. Для простоты будем считать, что "ничья" в
# этом виде спорта не предусмотрена и каждый матч описывается парой (кортежем)
# строк, где первая именует победителя, а вторая проигравшего. И сами с собой
# команды пусть тоже не играют :)#
# Вам предстоит реализовать функцию wins_by_team(), которая должна принимать
# перечень (iterable) матчей в качестве единственного аргумента и возвращать
# словарь, ключами которого выступали бы имена команд, а значениями множества
# названий команд которых данная команда-ключ обыграла хотя бы раз.


def wins_by_team(games):
    winners = {winners for winners, _ in games}
    return {team: {loser for winner, loser in games if winner == team}
            for team in winners}


assert isinstance(wins_by_team([]), dict), "Function should return a dict"
assert wins_by_team([]) == {}
assert wins_by_team([("Griffindor", "Slytherin")]) == {
    "Griffindor": {"Slytherin"},
}
assert wins_by_team([
    ("X", "Y"),
    ("Y", "Z"),
    ("X", "Z"),
]) == {'X': {'Y', 'Z'}, 'Y': {'Z'}}
assert wins_by_team([
    ('A', 'T'),
    ('C', 'G'),
    ('G', 'C'),
    ('C', 'G'),
    ('T', 'A'),
    ('A', 'T'),
    ('T', 'A'),
    ('T', 'A'),
    ('G', 'C'),
    ('G', 'C'),
]) == {'A': {'T'}, 'C': {'G'}, 'G': {'C'}, 'T': {'A'}}
